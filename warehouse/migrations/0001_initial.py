# Generated by Django 5.0.6 on 2024-06-17 09:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('subtitle', models.CharField(blank=True, max_length=255, null=True, verbose_name='Subtitle')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='brand_pictures/', verbose_name='Picture')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
                'db_table': 'warehouse_brand',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('is_downloadable', models.BooleanField(default=False, verbose_name='Is Downloadable')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'db_table': 'warehouse_category',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Pack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=255, unique=True, verbose_name='SKU')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('buy_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Buy Price')),
                ('stock', models.IntegerField(verbose_name='Stock')),
                ('actual_stock', models.IntegerField(verbose_name='Actual Stock')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('is_default', models.BooleanField(default=False, verbose_name='Is Default')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'Pack',
                'verbose_name_plural': 'Packs',
                'db_table': 'warehouse_pack',
                'ordering': ['sku'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=255, unique=True, verbose_name='SKU')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('subtitle', models.CharField(blank=True, max_length=255, null=True, verbose_name='Subtitle')),
                ('can_review', models.BooleanField(default=False, verbose_name='Can Review')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('min_purchase', models.IntegerField(default=1, verbose_name='Minimum Purchase')),
                ('max_purchase', models.IntegerField(default=1, verbose_name='Maximum Purchase')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'db_table': 'warehouse_product',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='ProductGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_default', models.BooleanField(default=False, verbose_name='Is Default')),
                ('picture', models.ImageField(upload_to='product_pictures/', verbose_name='Picture')),
                ('width', models.IntegerField(blank=True, null=True, verbose_name='Width')),
                ('height', models.IntegerField(blank=True, null=True, verbose_name='Height')),
                ('alternate_text', models.CharField(blank=True, max_length=255, null=True, verbose_name='Alternate Text')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'Product Gallery',
                'verbose_name_plural': 'Product Galleries',
                'db_table': 'warehouse_product_gallery',
                'ordering': ['product'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='Title')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'db_table': 'warehouse_tag',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='AttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attval_title', models.CharField(max_length=255, unique=True, verbose_name='Attribute Value Title')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='warehouse.attributevalue', verbose_name='Parent Attribute')),
            ],
            options={
                'verbose_name': 'Attribute Value',
                'verbose_name_plural': 'Attribute Values',
                'db_table': 'warehouse_attribute_value',
                'ordering': ['attval_title'],
            },
        ),
        migrations.AddConstraint(
            model_name='brand',
            constraint=models.UniqueConstraint(fields=('title', 'slug'), name='unique_brand_title_slug'),
        ),
        migrations.AddField(
            model_name='category',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='warehouse.category', verbose_name='Parent Category'),
        ),
        migrations.AddField(
            model_name='pack',
            name='att_val_ids',
            field=models.ManyToManyField(blank=True, to='warehouse.attributevalue', verbose_name='Attribute Values'),
        ),
        migrations.AddField(
            model_name='product',
            name='brand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.brand', verbose_name='Brand'),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.category', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='product',
            name='related_products',
            field=models.ManyToManyField(blank=True, related_name='related_by', to='warehouse.product', verbose_name='Related Products'),
        ),
        migrations.AddField(
            model_name='product',
            name='suggested_products',
            field=models.ManyToManyField(blank=True, related_name='suggested_by', to='warehouse.product', verbose_name='Suggested Products'),
        ),
        migrations.AddField(
            model_name='pack',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packs', to='warehouse.product', verbose_name='Product'),
        ),
        migrations.AddField(
            model_name='productgallery',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='galleries', to='warehouse.product', verbose_name='Product'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(blank=True, to='warehouse.tag', verbose_name='Tags'),
        ),
    ]
